//The following returns an appropriate index even if the element doesn't exist

int bsearch(int* t, int n_elem, int key) {
	int low = 0, high = n_elem - 1, mid, index = -1;
	bool done = false;
	while (!done) {
		mid = (high + low) / 2;
		if (t[mid] == key) {
			index = mid;
			done = !done;
		}
		else if (t[mid] > key) {
			if (low < mid) {
				high = mid - 1;
			}
			else {
				index = mid;
				done = !done;
			}
		}
		else {
			if (high > mid) {
				low = mid + 1;
			}
			else {
				index = mid + 1;
				done = !done;
			}
		}
	}
	return index;
}